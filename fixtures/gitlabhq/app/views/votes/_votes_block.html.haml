.awards.votes-block
  - awards_sort(votable.notes.awards.grouped_awards).each do |emoji, notes|
    %button.btn.award-control.js-emoji-btn.has_tooltip{class: (note_active_class(notes, current_user)), title: emoji_author_list(notes, current_user), data: {placement: "top"}}
      = emoji_icon(emoji)
      %span.award-control-text.js-counter
        = notes.count

  - if current_user
    %div.award-menu-holder.js-award-holder
      %a.btn.award-control.js-add-award{"href" => "#"}
        = icon('smile-o', {class: "award-control-icon"})
        = icon('spinner spin', {class: "award-control-icon award-control-icon-loading"})
        %span.award-control-text
          Add

- if current_user
  :javascript
    var post_emoji_url = "#{award_toggle_namespace_project_notes_path(@project.namespace, @project)}";
    var noteable_type = "#{votable.class.name.underscore}";
    var noteable_id = "#{votable.id}";
    var aliases = #{AwardEmoji.aliases.to_json};

    window.awards_handler = new AwardsHandler(
      post_emoji_url,
      noteable_type,
      noteable_id,
      aliases
    );
